<!DOCTYPE html>
<html>
<head>
  <script src='/socket.io/socket.io.js'></script>
  <script>
    var socket = io();

    socket.on("connectedChange", function(){
      fetch("/chatroom", {
        headers: {
          accept: "application/json"
        },
        credentials: 'include'
      }).then(function(response){
        if(!response.ok){
          console.log("Whoops! something broke: " + response.statusText);
        }
        else{
          return Promise.resolve(response);
        }
      }).then(function(response){
        return response.json();
      }).then(function(data){
        var users = data.users;
        var textarea = document.getElementById("connected_users");
        textarea.innerHTML = "Users:\n";
        for(var i=0;i<users.length;i++){
          if(i < (users.length -1)){
            textarea.innerHTML += users[i].nickname + "\n";
          }
          else{
            textarea.innerHTML += users[i].nickname;
          }
        }
      })
    })

    socket.on("newMessage", function(){
      fetch("/chatroom", {
        headers: {
          accept: "application/json"
        },
        credentials: 'include'
      }).then(function(response){
        if(!response.ok){
          console.log("Whoops! something broke: " + response.statusText);
        }
        else{
          return Promise.resolve(response);
        }
      }).then(function(response){
        return response.json();
      }).then(function(data){
        var messages = data.messages;
        var textarea = document.getElementById("message_window");
        textarea.innerHTML = "";
        for(var i=0;i<messages.length;i++){
          if(i < (messages.length -1)){
            textarea.innerHTML += messages[i] + "\n";
          }
          else{
            textarea.innerHTML += messages[i];
          }
        }
        setTimeout(function(){
          var textarea = document.getElementById("message_window");
          textarea.scrollTop = textarea.scrollHeight;
        }, 10) // Attempt to stick to the most recent message to prevent the user from being thrown back to the top each time a new message is sent
      })
      if (!("Notification" in window)){
        alert("This browser does not support desktop notifications");
      }
      else if (Notification.permission === "granted"){
        var notification = new Notification("New Message!");
      }
      else if (Notification.permission !== "denied"){
        Notification.requestPermission(function(permission){
          if (permission === "granted"){
            var notification = new Notification("New Message!");
          }
        })
      }
    });

    document.addEventListener("DOMContentLoaded", function(event){
      document.getElementById("sign_out").addEventListener("click", function(event){
        window.location = "/logout";
      })
      var textarea = document.getElementById("message_window");
      textarea.scrollTop = textarea.scrollHeight;
      var chatform = document.getElementById("chatroom");
      chatform.addEventListener("submit", function(event){
        event.preventDefault();
        fetch("/chatroom", {
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          },
          credentials: 'include',
          body: JSON.stringify({message: chatform["message"].value})
        }).then(function(response){
          chatform["message"].value = "";
        })
      })
    });
  </script>
  <style>
    form{
      margin: 0 auto;
      width: 700px;
      padding: 1em;
      border: 1px solid #CCC;
      border-radius: 1em;
      background-color: #D0DDFF;
    }

    form div + div{
      margin-top: .5em;
    }

    label{
      display: inline-block;
      width: auto;
      text-align: left;
      font: 1em sans-serif;
    }

    input, textarea{
      font: 1em sans-serif;
      width: 560px;
      box-sizing: border-box;
      border: 1px solid #999;
    }

    textarea{
      height: 20em;
      width: 700px;
      resize: none;
      color: #000000;
      background-color: #F0FFFF;
    }

    #connected_users{
      height: 5em;
      width: auto;
      margin-left: 14.5em;
    }

    input:focus{
      border-color: #000;
    }

    .button{
      padding-left: 0px;
    }

    button{
      margin-left: .1em;
      font: 1em sans-serif;
    }
  </style>
</head>
<form method="post" id="chatroom" autocomplete="off">
  <div>
    <textarea id="message_window" name="message_window" wrap="soft" disabled="true"><%if (messages.length === 0) { %>Welcome to the chatroom, type something below to get started!<% } else for(var i = 0; i < messages.length; ++i) {%>
<%=messages[i]%><% } %></textarea>
  </div>
  <div>
    <label>Hello <%=name%>!</label>
  </div>
  <div>
    <input type="text" id="messsage_box" name="message" autofocus="true"><button type="submit">Send message</button>
  </div>
  <div>
    <button type="button" id="sign_out">Sign out</button>
  </div>
  <textarea id="connected_users" name="users_display" wrap="soft" disabled="true">Users:<%for(var i=0; i<users.length; i++) {%>
<%=users[i].nickname%><%} %></textarea>
</form>
</html>
